DONE ----- Get Pytest working on palnisphere_tests.py and app_tests.py

DONE ----- Get moving through all Rooms working

DONE --- Think about how to implement Parser
(Needed Categories:



Available object interaction combination:

Should be easy to input combinations - i.e. I want that if the user tries to
use that object with that object that this happens. These combinations could be stored
in a nested dictionary: http://python.omics.wiki/data-structures/dictionary/multiple-keys



Tasks:

DONE ------ Import Directions and Objects to Lexicon from planisphere.py
Create basic actions ('go', 'hit', 'take')
DONE ------ Implement synonym processing in lexicon so that every input is converted to the determined command names.
)

DONE ------ Write tests for UI

DONE ------ Create Inventory

DONE ------ Add Check Inventory/Gamestate Command

Fix Pytest Fixture so that test_check_gamestate() does not contain 'pflanze' anymore

DONE ------ Create Life Points and Strength Points

DONE ------ Plan most Scene actions

Create 'with' feature and combination of objects

Create 'building' feature

Implement Scene action to the Rooms

Use placeholder images to figure out frontend (descriptions, input and output)

Implement real pictures

Create landing page

Make the Simulator available online (pay attention to security)

Create english and עברית versions

Write fuzz test for UI

Improve Code (Get Feedback, Look for alternative solutions)
Put action Error messages in dict in new module.


BUGS TO BE FIXED:

Error messages return list with clean_words as output rather than user input.
